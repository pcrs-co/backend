# Generated by Django 5.1.7 on 2025-07-02 16:35

import django.db.models.deletion
import vendor.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('login_and_register', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cooling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_received', models.CharField(blank=True, max_length=10000, null=True)),
                ('cooling_type', models.CharField(blank=True, max_length=50, null=True)),
                ('fan_count', models.IntegerField(blank=True, null=True)),
                ('cooler_brand', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Display',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_received', models.CharField(blank=True, max_length=10000, null=True)),
                ('size_inches', models.FloatField(blank=True, null=True)),
                ('resolution', models.CharField(blank=True, max_length=50, null=True)),
                ('panel_type', models.CharField(blank=True, max_length=50, null=True)),
                ('refresh_rate_hz', models.IntegerField(blank=True, null=True)),
                ('aspect_ratio', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Extra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_received', models.CharField(blank=True, max_length=10000, null=True)),
                ('keyboard_type', models.CharField(blank=True, max_length=50, null=True)),
                ('has_backlit_keyboard', models.BooleanField(blank=True, null=True)),
                ('webcam_resolution', models.CharField(blank=True, max_length=50, null=True)),
                ('biometrics', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='FormFactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_received', models.CharField(blank=True, max_length=10000, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('dimensions', models.CharField(blank=True, max_length=50, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Graphic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_received', models.CharField(blank=True, max_length=10000, null=True)),
                ('gpu_type', models.CharField(blank=True, max_length=50, null=True)),
                ('brand', models.CharField(blank=True, max_length=50, null=True)),
                ('model', models.CharField(blank=True, max_length=50, null=True)),
                ('vram_size_gb', models.IntegerField(blank=True, null=True)),
                ('series', models.CharField(blank=True, max_length=50, null=True)),
                ('score', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OperatingSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_received', models.CharField(blank=True, max_length=10000, null=True)),
                ('os_name', models.CharField(blank=True, max_length=50, null=True)),
                ('version', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PortsConnectivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_received', models.CharField(blank=True, max_length=10000, null=True)),
                ('usb_ports', models.IntegerField(blank=True, null=True)),
                ('video_output', models.CharField(blank=True, max_length=100, null=True)),
                ('ethernet_speed', models.FloatField(blank=True, null=True)),
                ('wifi_version', models.CharField(blank=True, max_length=50, null=True)),
                ('bluetooth_version', models.CharField(blank=True, max_length=50, null=True)),
                ('audio_jack', models.BooleanField(blank=True, null=True)),
                ('sd_card_reader', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PowerBattery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_received', models.CharField(blank=True, max_length=10000, null=True)),
                ('battery_capacity_wh', models.FloatField(blank=True, null=True)),
                ('adapter_wattage', models.IntegerField(blank=True, null=True)),
                ('estimated_battery_life_hours', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Processor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_received', models.CharField(blank=True, max_length=1000, null=True)),
                ('brand', models.CharField(blank=True, max_length=100, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('series', models.CharField(blank=True, max_length=50, null=True)),
                ('generation', models.CharField(blank=True, max_length=50, null=True)),
                ('core_count', models.IntegerField(blank=True, null=True)),
                ('thread_count', models.IntegerField(blank=True, null=True)),
                ('base_clock_speed', models.FloatField(blank=True, null=True)),
                ('boost_clock_speed', models.FloatField(blank=True, null=True)),
                ('cache_size', models.CharField(blank=True, max_length=50, null=True)),
                ('integrated_graphics', models.BooleanField(blank=True, max_length=50, null=True)),
                ('score', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_received', models.CharField(blank=True, max_length=10000, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('form_factor', models.CharField(blank=True, max_length=50, null=True)),
                ('capacity_gb', models.IntegerField(blank=True, null=True)),
                ('interface', models.CharField(blank=True, max_length=50, null=True)),
                ('rpm', models.IntegerField(blank=True, null=True)),
                ('read_speed_mbps', models.IntegerField(blank=True, null=True)),
                ('write_speed_mbps', models.IntegerField(blank=True, null=True)),
                ('score', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_received', models.CharField(blank=True, max_length=1000, null=True)),
                ('capacity_gb', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('frequency_mhz', models.IntegerField(blank=True, null=True)),
                ('ecc_support', models.BooleanField(blank=True, null=True)),
                ('channels', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('capacity_gb', 'type', 'frequency_mhz', 'ecc_support', 'channels')},
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('brand', models.CharField(max_length=255)),
                ('product_type', models.CharField(choices=[('laptop', 'Laptop'), ('desktop', 'Desktop')], max_length=50)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('pending_quantity', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('battery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='vendor.powerbattery')),
                ('cooling', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='vendor.cooling')),
                ('display', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='vendor.display')),
                ('extra', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='vendor.extra')),
                ('form_factor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='vendor.formfactor')),
                ('graphic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='vendor.graphic')),
                ('memory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='vendor.memory')),
                ('operating_system', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='vendor.operatingsystem')),
                ('ports', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='vendor.portsconnectivity')),
                ('processor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='vendor.processor')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='login_and_register.vendor')),
                ('storage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='vendor.storage')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=vendor.models.get_product_image_path)),
                ('alt_text', models.CharField(blank=True, help_text='A short description of the image for accessibility.', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='vendor.product')),
            ],
        ),
    ]
