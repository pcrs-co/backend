# Generated by Django 5.1.7 on 2025-07-01 23:16

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CPUBenchmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The full, original name from the benchmark source.', max_length=255, unique=True)),
                ('model_name', models.CharField(db_index=True, help_text="The clean model name, e.g., 'Intel Core i9-9960X'", max_length=200)),
                ('clock_speed_ghz', models.DecimalField(blank=True, decimal_places=2, help_text='The clock speed in GHz, if available.', max_digits=4, null=True)),
                ('score', models.IntegerField()),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('value_score', models.FloatField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DiskBenchmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drive_name', models.CharField(max_length=255, unique=True)),
                ('size_tb', models.FloatField(blank=True, null=True)),
                ('score', models.IntegerField()),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('value_score', models.FloatField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GPUBenchmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="The full, original name from the benchmark source, e.g., 'NVIDIA GeForce RTX 4090'", max_length=255, unique=True)),
                ('model_name', models.CharField(db_index=True, help_text="The clean model name, e.g., 'GeForce RTX 4090'", max_length=200)),
                ('score', models.IntegerField()),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('value_score', models.FloatField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('intensity_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], max_length=10)),
                ('source', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='ai_recommender.activity')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationExtractionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_text', models.TextField()),
                ('extracted_apps', models.JSONField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('method', models.CharField(max_length=50)),
                ('confidence', models.FloatField()),
                ('reviewed', models.BooleanField(default=False)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_recommender.activity')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationSystemRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('minimum', 'Minimum'), ('recommended', 'Recommended')], max_length=20)),
                ('cpu', models.CharField(max_length=255)),
                ('gpu', models.CharField(max_length=255)),
                ('cpu_score', models.IntegerField(blank=True, null=True)),
                ('gpu_score', models.IntegerField(blank=True, null=True)),
                ('ram', models.IntegerField(help_text='RAM in GB')),
                ('storage_size', models.IntegerField(help_text='Storage in GB')),
                ('storage_type', models.CharField(choices=[('SSD', 'SSD'), ('HDD', 'HDD'), ('Any', 'Any')], default='Any', max_length=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='ai_recommender.application')),
            ],
        ),
        migrations.CreateModel(
            name='RequirementExtractionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_text', models.TextField()),
                ('extracted_json', models.JSONField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('method', models.CharField(default='regex', max_length=50)),
                ('confidence', models.FloatField(null=True)),
                ('reviewed', models.BooleanField(default=False)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_recommender.application')),
            ],
        ),
        migrations.CreateModel(
            name='RequirementMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpu_confidence', models.FloatField(default=0.0)),
                ('gpu_confidence', models.FloatField(default=0.0)),
                ('match_method', models.CharField(default='exact', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('matched_cpu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai_recommender.cpubenchmark')),
                ('matched_gpu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai_recommender.gpubenchmark')),
            ],
        ),
        migrations.CreateModel(
            name='AdminCorrectionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(blank=True)),
                ('corrected_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('corrected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('corrected_cpu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='corrected_cpu', to='ai_recommender.cpubenchmark')),
                ('corrected_gpu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='corrected_gpu', to='ai_recommender.gpubenchmark')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_recommender.requirementmatch')),
            ],
        ),
        migrations.CreateModel(
            name='ScrapingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=50)),
                ('app_count', models.PositiveIntegerField()),
                ('timestamp', models.DateTimeField()),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_recommender.activity')),
            ],
        ),
        migrations.CreateModel(
            name='SystemRequirementExtraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_url', models.URLField()),
                ('raw_text', models.TextField()),
                ('extracted_cpu', models.CharField(blank=True, max_length=255)),
                ('extracted_gpu', models.CharField(blank=True, max_length=255)),
                ('extracted_ram', models.IntegerField(blank=True, null=True)),
                ('extracted_storage', models.IntegerField(blank=True, null=True)),
                ('extraction_method', models.CharField(default='rule-based', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_recommender.application')),
            ],
        ),
        migrations.AddField(
            model_name='requirementmatch',
            name='extraction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_recommender.systemrequirementextraction'),
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=65, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('activities', models.ManyToManyField(to='ai_recommender.activity')),
                ('applications', models.ManyToManyField(blank=True, to='ai_recommender.application')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RecommendationSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(choices=[('recommended', 'Recommended'), ('minimum', 'Minimum')], default='recommended', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recommended_cpu_name', models.CharField(blank=True, max_length=255, null=True)),
                ('recommended_gpu_name', models.CharField(blank=True, max_length=255, null=True)),
                ('recommended_cpu_score', models.IntegerField(blank=True, null=True)),
                ('recommended_gpu_score', models.IntegerField(blank=True, null=True)),
                ('recommended_ram', models.IntegerField(blank=True, null=True)),
                ('recommended_storage_size', models.IntegerField(blank=True, null=True)),
                ('recommended_storage_type', models.CharField(default='Any', max_length=10)),
                ('min_cpu_name', models.CharField(blank=True, max_length=255, null=True)),
                ('min_gpu_name', models.CharField(blank=True, max_length=255, null=True)),
                ('min_cpu_score', models.IntegerField(blank=True, null=True)),
                ('min_gpu_score', models.IntegerField(blank=True, null=True)),
                ('min_ram', models.IntegerField(blank=True, null=True)),
                ('min_storage_size', models.IntegerField(blank=True, null=True)),
                ('min_storage_type', models.CharField(default='Any', max_length=10)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('source_preference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai_recommender.userpreference')),
            ],
        ),
    ]
