# Generated by Django 5.1.7 on 2025-07-02 16:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ai_recommender', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='admincorrectionlog',
            name='corrected_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='application',
            name='activity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='ai_recommender.activity'),
        ),
        migrations.AddField(
            model_name='applicationextractionlog',
            name='activity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_recommender.activity'),
        ),
        migrations.AddField(
            model_name='applicationsystemrequirement',
            name='application',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='ai_recommender.application'),
        ),
        migrations.AddField(
            model_name='admincorrectionlog',
            name='corrected_match',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='corrected_cpu_matches', to='ai_recommender.cpubenchmark'),
        ),
        migrations.AddField(
            model_name='admincorrectionlog',
            name='original_match',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='original_cpu_matches', to='ai_recommender.cpubenchmark'),
        ),
        migrations.AddField(
            model_name='recommendationspecification',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='recommendationlog',
            name='final_recommendation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_recommender.recommendationspecification'),
        ),
        migrations.AddField(
            model_name='recommendationlog',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='requirementextractionlog',
            name='application',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_recommender.application'),
        ),
        migrations.AddField(
            model_name='requirementextractionlog',
            name='source_extraction_log',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai_recommender.applicationextractionlog'),
        ),
        migrations.AddField(
            model_name='admincorrectionlog',
            name='requirement_log',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='correction_logs', to='ai_recommender.requirementextractionlog'),
        ),
        migrations.AddField(
            model_name='requirementmatch',
            name='matched_cpu',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai_recommender.cpubenchmark'),
        ),
        migrations.AddField(
            model_name='requirementmatch',
            name='matched_gpu',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai_recommender.gpubenchmark'),
        ),
        migrations.AddField(
            model_name='scrapinglog',
            name='activity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_recommender.activity'),
        ),
        migrations.AddField(
            model_name='systemrequirementextraction',
            name='application',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_recommender.application'),
        ),
        migrations.AddField(
            model_name='requirementmatch',
            name='extraction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_recommender.systemrequirementextraction'),
        ),
        migrations.AddField(
            model_name='userpreference',
            name='activities',
            field=models.ManyToManyField(to='ai_recommender.activity'),
        ),
        migrations.AddField(
            model_name='userpreference',
            name='applications',
            field=models.ManyToManyField(blank=True, to='ai_recommender.application'),
        ),
        migrations.AddField(
            model_name='userpreference',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='recommendationspecification',
            name='source_preference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai_recommender.userpreference'),
        ),
        migrations.AddField(
            model_name='recommendationlog',
            name='source_preference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai_recommender.userpreference'),
        ),
        migrations.CreateModel(
            name='RecommendationFeedback',
            fields=[
                ('recommendation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='ai_recommender.recommendationspecification')),
                ('admin_rating', models.IntegerField(blank=True, choices=[(3, 'Excellent'), (2, 'Good'), (1, 'Poor'), (0, 'Incorrect')], null=True)),
                ('admin_notes', models.TextField(blank=True, help_text='Why this rating was given.')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
