# Generated by Django 5.1.7 on 2025-07-02 01:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ai_recommender', '0004_recommendationlog'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RenameField(
            model_name='admincorrectionlog',
            old_name='corrected_at',
            new_name='created_at',
        ),
        migrations.RenameField(
            model_name='applicationextractionlog',
            old_name='timestamp',
            new_name='created_at',
        ),
        migrations.RenameField(
            model_name='applicationextractionlog',
            old_name='source_text',
            new_name='raw_ai_response',
        ),
        migrations.RenameField(
            model_name='requirementextractionlog',
            old_name='timestamp',
            new_name='created_at',
        ),
        migrations.RemoveField(
            model_name='admincorrectionlog',
            name='corrected_cpu',
        ),
        migrations.RemoveField(
            model_name='admincorrectionlog',
            name='corrected_gpu',
        ),
        migrations.RemoveField(
            model_name='admincorrectionlog',
            name='match',
        ),
        migrations.RemoveField(
            model_name='admincorrectionlog',
            name='modified_at',
        ),
        migrations.RemoveField(
            model_name='applicationextractionlog',
            name='confidence',
        ),
        migrations.RemoveField(
            model_name='applicationextractionlog',
            name='extracted_apps',
        ),
        migrations.RemoveField(
            model_name='applicationextractionlog',
            name='method',
        ),
        migrations.RemoveField(
            model_name='applicationextractionlog',
            name='reviewed',
        ),
        migrations.RemoveField(
            model_name='requirementextractionlog',
            name='confidence',
        ),
        migrations.RemoveField(
            model_name='requirementextractionlog',
            name='extracted_json',
        ),
        migrations.RemoveField(
            model_name='requirementextractionlog',
            name='method',
        ),
        migrations.RemoveField(
            model_name='requirementextractionlog',
            name='reviewed',
        ),
        migrations.RemoveField(
            model_name='requirementextractionlog',
            name='source_text',
        ),
        migrations.AddField(
            model_name='admincorrectionlog',
            name='component_type',
            field=models.CharField(blank=True, choices=[('cpu', 'CPU'), ('gpu', 'GPU'), ('disk', 'Disk')], help_text='The type of component being corrected (CPU, GPU, Disk).', max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='admincorrectionlog',
            name='corrected_match',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='corrected_cpu_matches', to='ai_recommender.cpubenchmark'),
        ),
        migrations.AddField(
            model_name='admincorrectionlog',
            name='original_match',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='original_cpu_matches', to='ai_recommender.cpubenchmark'),
        ),
        migrations.AddField(
            model_name='admincorrectionlog',
            name='original_text',
            field=models.CharField(blank=True, help_text='The text the AI tried to match.', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='admincorrectionlog',
            name='requirement_log',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='correction_logs', to='ai_recommender.requirementextractionlog'),
        ),
        migrations.AddField(
            model_name='requirementextractionlog',
            name='extracted_cpu',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='requirementextractionlog',
            name='extracted_gpu',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='requirementextractionlog',
            name='extracted_ram',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='requirementextractionlog',
            name='extracted_storage',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='requirementextractionlog',
            name='notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='requirementextractionlog',
            name='raw_text',
            field=models.TextField(blank=True, help_text='The raw text that was processed to extract these requirements.', null=True),
        ),
        migrations.AddField(
            model_name='requirementextractionlog',
            name='source_extraction_log',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai_recommender.applicationextractionlog'),
        ),
        migrations.CreateModel(
            name='RecommendationFeedback',
            fields=[
                ('recommendation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='ai_recommender.recommendationspecification')),
                ('admin_rating', models.IntegerField(blank=True, choices=[(3, 'Excellent'), (2, 'Good'), (1, 'Poor'), (0, 'Incorrect')], null=True)),
                ('admin_notes', models.TextField(blank=True, help_text='Why this rating was given.')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
